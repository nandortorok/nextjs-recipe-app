generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  recipes       Recipe[]
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  @@map("user")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtoken")
}

model Unit {
  id                 Int                 @id
  name               String              @unique
  short              String?             @unique
  sectionIngredients SectionIngredient[]
  metric             Conversion[]        @relation(name: "metric")
  imperial           Conversion?         @relation(name: "imperial")

  @@map("unit")
}

model Conversion {
  imperialUnitId Int   @unique
  metricUnitId   Int
  imperialAmount Int
  metricAmount   Float
  imperialUnit   Unit  @relation(name: "imperial", fields: [imperialUnitId], references: [id])
  metricUnit     Unit  @relation(name: "metric", fields: [metricUnitId], references: [id])

  @@id([metricUnitId, imperialUnitId])
  @@map("conversion")
}

model Ingredient {
  id                 Int                 @id @default(autoincrement())
  name               String              @unique
  sectionIngredients SectionIngredient[]

  @@map("ingredient")
}

model Section {
  id                 Int                 @default(0)
  recipe             Recipe              @relation(fields: [recipeId], references: [id])
  recipeId           String              @map("recipe_id")
  title              String?             @map("title")
  sectionIngredients SectionIngredient[]
  directions         Direction[]

  @@id([id, recipeId])
  @@map("section")
}

model SectionIngredient {
  sectionId       Int        @map("section_id")
  section         Section    @relation(fields: [sectionId, sectionRecipeId], references: [id, recipeId])
  sectionRecipeId String     @map("section_recipe_id")
  ingredient      Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId    Int        @map("ingredient_id")
  unit            Unit?      @relation(fields: [unitId], references: [id])
  unitId          Int?       @map("unit_id")
  amount          Int?

  @@id([sectionId, sectionRecipeId, ingredientId])
  @@map("section_ingredient")
}

model Recipe {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  title     String
  imagePath String    @map("image_path")
  servings  Int
  prepTime  Int       @map("prep_time")
  cookTime  Int       @map("cook_time")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  sections  Section[]
  user      User      @relation(fields: [userId], references: [id])
  featured  Featured?

  @@map("recipe")
}

model Direction {
  stepNumber      Int     @default(1) @map("step_number")
  direction       String
  section         Section @relation(fields: [sectionId, sectionRecipeId], references: [id, recipeId])
  sectionId       Int     @map("section_id")
  sectionRecipeId String  @map("section_recipe_id")

  @@id([stepNumber, sectionId, sectionRecipeId])
  @@map("direction")
}

model Featured {
  createdAt DateTime @default(now()) @map("created_at")
  recipeId  String   @unique @map("recipe_id")
  recipe    Recipe   @relation(fields: [recipeId], references: [id])

  @@id([createdAt, recipeId])
  @@map("featured")
}
